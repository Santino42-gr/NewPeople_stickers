require('dotenv').config();

console.log('üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –≤–Ω–µ—à–Ω–∏—Ö API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π\n');

async function runAllTests() {
  console.log('=' .repeat(50));
  console.log('üì± TELEGRAM BOT API');
  console.log('=' .repeat(50));
  
  try {
    require('./test-telegram-api.js');
    await new Promise(resolve => setTimeout(resolve, 2000)); // –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Ç–µ—Å—Ç–∞–º–∏
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ Telegram API:', error.message);
  }
  
  console.log('\n' + '=' .repeat(50));
  console.log('ü§ñ PIAPI AI API'); 
  console.log('=' .repeat(50));
  
  try {
    require('./test-piapi-api.js');
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ Piapi API:', error.message);
  }
  
  console.log('\n' + '=' .repeat(50));
  console.log('üìã –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø');
  console.log('=' .repeat(50));
  
  const telegramToken = process.env.TELEGRAM_BOT_TOKEN;
  const piapiKey = process.env.PIAPI_API_KEY;
  
  console.log('\nüîß –°—Ç–∞—Ç—É—Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è:');
  console.log(`   TELEGRAM_BOT_TOKEN: ${telegramToken && telegramToken !== 'your_telegram_bot_token' ? '‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω' : '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}`);
  console.log(`   PIAPI_API_KEY: ${piapiKey && piapiKey !== 'your_piapi_api_key' ? '‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω' : '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}`);
  console.log(`   SUPABASE_URL: ${process.env.SUPABASE_URL ? '‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω' : '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}`);
  console.log(`   SUPABASE_ANON_KEY: ${process.env.SUPABASE_ANON_KEY ? '‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω' : '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}`);
  
  const allConfigured = telegramToken && telegramToken !== 'your_telegram_bot_token' &&
                       piapiKey && piapiKey !== 'your_piapi_api_key' &&
                       process.env.SUPABASE_URL && process.env.SUPABASE_ANON_KEY;
  
  if (allConfigured) {
    console.log('\nüéâ –í—Å–µ API –∫–ª—é—á–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã! –ì–æ—Ç–æ–≤ –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞.');
  } else {
    console.log('\n‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ API –∫–ª—é—á–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ.');
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ—Ç —Ñ–∞–π–ª –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  runAllTests();
}